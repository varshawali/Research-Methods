# -*- coding: utf-8 -*-
"""RS CW2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RHpYt0cfWBKttYPZuHbqpeqf4QVBRU8S
"""

pip install matplotlib

import pandas as pd
import plotly.express as px
import plotly.graph_objects as go

# Load your data
data = pd.read_csv('Results_21Mar2022.csv')  # Make sure to provide the correct path to your CSV file

# Map diet groups to numerical codes and specified colors
diet_groups = {'meat100': 1, 'meat50': 2, 'meat': 3, 'fish': 4, 'vegan': 5, 'veggie': 6}
colors = ['#361c0e','#795548' ,'#570211','#032c4d','#538d22','#143601' ]
# Apply mappings
data['diet_code'] = data['diet_group'].map(diet_groups)

# Select columns to plot
cols_to_plot = ['sex', 'diet_group', 'age_group', 'mean_ghgs', 'mean_land', 'mean_watscar', 'mean_eut', 'mean_ghgs_n2o', 'mean_bio', 'mean_watuse', 'mean_acid']

# Create the parallel coordinates plot
fig = px.parallel_coordinates(data, dimensions=cols_to_plot, color='diet_code',
                              labels={
                                  'sex': 'Sex',
                                  'diet_group': 'Diet Group',
                                  'age_group': 'Age Group',
                                  'mean_ghgs': 'GHG Emissions',
                                  'mean_land': 'Land Use',
                                  'mean_watscar': 'Water Scarcity',
                                  'mean_eut': 'Eutrophication',
                                  'mean_ghgs_n2o': 'N2O Emissions',
                                  'mean_bio': 'Biodiversity',
                                  'mean_watuse': 'Agricultural Water Usage',
                                  'mean_acid': 'Acidification Potential'
                              },
                              color_continuous_scale=colors,  # Apply the custom color scale
                              color_continuous_midpoint=3.5,  # Adjust if necessary for better color distribution
                              title='Environmental Impacts by Diet groups')

# Customize the color scale to display as discrete
fig.update_layout(coloraxis_colorbar=dict(
    tickvals=list(diet_groups.values()),
    ticktext=list(diet_groups.keys())
))

# Show the plot
fig.show()